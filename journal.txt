mummer4/4.0 
nucmer --prefix=SC_SP  /mnt/Timina/lmorales/Public/ymez/data/ref/SACE_S288C_v1/fasta/SACE_S288C_v1_allChr.fasta   /mnt/Timina/lmorales/Public/ymez/data/ref/SAPA_YPS138_v1/fasta/SAPA_YPS138_v1_allChr.fasta 
delta-filter -r -q SC_SP.delta > filtered_SCSP.delta
show-coords -rcl filtered_SCSP.delta > alignments.coords

nucmer --prefix=sac_par_synteny -c 40 -l 15 -b 500 S_cerevisiae.fasta S_paradoxus.fasta # esta no la corrí
# -c cluster length (default 65) # -l match length (default 20)   # -b break length to allow size of the gaps (default 200)

delta-filter -i 70 -l 500 filtered_SCSP.delta > filtered_SCSP_2.delta # i minimum identity. -l minimum length of alignments
show-coords -rcl filtered_SCSP_2.delta > sac_par_synteny.coords

/mnt/Timina/lmorales/Public/ymez/data/ref/Mummer_SCSP/

cp /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/*.tbi   x|
 sed 's/ /,/g' sac_par_synteny.coords| sed 's/|//g' |sed 's/,,,,/,/g'|sed 's/,,,/,/g'|sed 's/,,/,/g'|sed 's/\t/,/g' | head > sc_sp_coords.txt


bash coords2chain.sh sac_par_synteny.coords output.chain  

module load liftover/liftover
cp /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/YMX004655_CONC.SNP_onlychr_SAPA.g.vcf
/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/YMX004655_CONC.SNP_onlychr_SACE.g.vcf

tabix -p vcf S_paradoxus.vcf.gz
----241212
#esto es de ES
nucmer --mum --prefix=DBVPG6765xYPS138_chr1 /mnt/Timina/lmorales/Public/ymez/esantiago/ParentalGenomesAlignment/data/DBVPG6765/SACE_DBVPG6765_Chr1.fa /mnt/Timina/lmorales/Public/ymez/esantiago/ParentalGenomesAlignment/data/YPS138/SAPA_YPS138_Chr1.fa
show-snps -CrT DBVPG6765xYPS138_chr1.delta > /mnt/Timina/lmorales/Public/ymez/esantiago/ParentalGenomesAlignment/data/alignments/DBVPG6765xYPS138_chr1.snps

nucmer --mum --prefix=S288CxYPS138_chr1 /mnt/Timina/lmorales/Public/ymez/data/ref/SACE_S288C_v1/fasta/OnebyOne/SACE_S288C_v1_chr_01.fasta /mnt/Timina/lmorales/Public/ymez/esantiago/ParentalGenomesAlignment/data/YPS138/SAPA_YPS138_Chr1.fa
show-snps -HCrT S288CxYPS138_chr1.delta > /mnt/Timina/lmorales/Public/ymez/esantiago/ParentalGenomesAlignment/data/alignments/S288CxYPS138_chr1.snps

#Ya adaptado:
show-snps -CrT  SC_SP.delta > SC_SP.snps

nucmer --mum --prefix=SC_SP_mum  /mnt/Timina/lmorales/Public/ymez/data/ref/SACE_S288C_v1/fasta/SACE_S288C_v1_allChr.fasta   /mnt/Timina/lmorales/Public/ymez/data/ref/SAPA_YPS138_v1/fasta/SAPA_YPS138_v1_allChr.fasta 
show-snps -HCrT SC_SP_mum.delta >  SC_SP_mum.snps



###################

cd /mnt/Timina/lmorales/Public/ymez/data/ref/Mummer_SCSP
module load samtools/1.9
bash extractCoverFromBed.sh YMX004655_CONC.rmdup.addgp.bam  sp_cords.tsv output__sp.depth
bash extractCoverFromBed.sh YMX004655_CONC.rmdup.addgp.bam  sc_cords.tsv output__sc.depth

module load samtools/1.9
bash run_extract_samples.sh /mnt/Timina/lmorales/Public/ymez/data/metadata/hybrids79.csv

module load samtools/1.9 #241128
bash run_extract_samples.sh /mnt/Timina/lmorales/Public/ymez/data/metadata/HybParents.csv #241128


/mnt/Timina/lmorales/Public/ymez/data/ref/Mummer_SCSP/sp_cords.tsv
ls -alth /mnt/Timina/lmorales/Public/ymez/data/bam/ | head 




############# Heterocigosidad en las mismas ventanas


#!/bin/bash

module load bcftools/1.9

REGIONS_FILE_sp="/mnt/Timina/lmorales/Public/ymez/data/bam/XA191c2_output_sp_500ntWindow.depth"
VCF_FILE_sp="/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SAPA.g.vcf.gz"
OUTPUT_FILE_sp="XA191c2_heterozygosity_per_region.txt"

REGIONS_FILE="/mnt/Timina/lmorales/Public/ymez/data/bam/XA191c2_output_sc_500ntWindow.depth"
VCF_FILE="/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SACE.g.vcf.gz"
OUTPUT_FILE="XA191c2_heterozygosity_per_region_SACE.txt"

last_chrom=""  # Variable para almacenar el último cromosoma procesado
echo -e "Region\tChromosome\tStart\tEnd\tTotal_Sites\tHeterozygous_Sites\tHeterozygosity" > "$OUTPUT_FILE" #Crear output con columnas

cut -f1 "$REGIONS_FILE" | while IFS= read -r region; do
    # Extraer el cromosoma y las coordenadas
    chrom=$(echo "$region" | cut -d':' -f1)
    start=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f1)
    end=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f2)


    if [[ "$chrom" != "$last_chrom" ]]; then
        echo "Processing chromosome: $chrom"
        last_chrom="$chrom"
    fi



    # Extraer variantes dentro de la región
    bcftools view -r "$chrom:$start-$end" "$VCF_FILE" -Ou | \
    bcftools query -f '[%CHROM\t%POS\t%GT\n]' > genotypes.tmp

    # Contar genotipos heterocigotos (0/1 o 1/0) y total de variantes
    total_sites=$(wc -l < genotypes.tmp)
    het_sites=$(awk '$3 == "0/1" || $3 == "1/0" {count++} END {print count}' genotypes.tmp)

    if [[ -z "$het_sites" ]]; then
       het_sites=0
       #continue
    fi

    # Calcular heterocigosidad (het_sites / total_sites)
    if [ "$total_sites" -gt 0 ]; then
        heterozygosity=$(awk "BEGIN {print $het_sites / $total_sites}")
    else
        #heterozygosity=0
        continue
    fi

    # Guardar los resultados
    echo -e "$region\t$chrom\t$start\t$end\t$total_sites\t$het_sites\t$heterozygosity" >> "$OUTPUT_FILE"

    # Limpiar archivo temporal
    rm genotypes.tmp

done


echo "Cálculo completado. Resultados guardados en $OUTPUT_FILE."

echo -e "Region\tChromosome\tStart\tEnd\tTotal_Sites\tHeterozygous_Sites\tHeterozygosity" > "$OUTPUT_FILE_sp"
cut -f1 "$REGIONS_FILE_sp" | while IFS= read -r region; do
    # Extraer el cromosoma y las coordenadas
    chrom=$(echo "$region" | cut -d':' -f1)
    start=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f1)
    end=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f2)
    # Extraer variantes dentro de la región
    bcftools view -r "$chrom:$start-$end" "$VCF_FILE_sp" -Ou | \
    bcftools query -f '[%CHROM\t%POS\t%GT\n]' > genotypes.tmp
    # Contar genotipos heterocigotos (0/1 o 1/0) y total de variantes
    total_sites=$(wc -l < genotypes.tmp)
    het_sites=$(awk '$3 == "0/1" || $3 == "1/0" {count++} END {print count}' genotypes.tmp)
    # Calcular heterocigosidad (het_sites / total_sites)
    if [ "$total_sites" -gt 0 ]; then
        heterozygosity=$(awk "BEGIN {print $het_sites / $total_sites}")
    else
        heterozygosity=0
    fi
    # Guardar los resultados
    echo -e "$region\t$chrom\t$start\t$end\t$total_sites\t$het_sites\t$heterozygosity" >> "$OUTPUT_FILE_sp"
    # Limpiar archivo temporal
    rm genotypes.tmp
done

echo "Cálculo completado. Resultados guardados en $OUTPUT_FILE_sp."



bash windowed_heterozygosity.sh
run_windowed_het.sh /mnt/Timina/lmorales/Public/ymez/data/metadata/HybParents.csv

####################### 250107 #########################
Ahora quiero tener la coverage depth as well as the heterozygosity through both genomes.
-record number of reads in favor of each nucleotide
-compare Spb vs LoH sequence. are we sure they are SpBMx?

Para tener una lista con ambos, necesito t

/mnt/Timina/lmorales/javelar/Mummer_Jan2025
/mnt/Timina/lmorales/Public/ymez/data/ref/Mummer_SCSP

#Ya adaptado # de la línea 33
show-snps -CrT  SC_SP.delta > SC_SP.snps
nucmer --mum --prefix=SC_SP_mum  /mnt/Timina/lmorales/Public/ymez/data/ref/SACE_S288C_v1/fasta/SACE_S288C_v1_allChr.fasta   /mnt/Timina/lmorales/Public/ymez/data/ref/SAPA_YPS138_v1/fasta/SAPA_YPS138_v1_allChr.fasta 
show-snps -HCrT SC_SP_mum.delta >  SC_SP_mum.snps #Aquí están todas las posiciones homólogas de la referencias que tienen algún SNP


#Ahora hay que agregar todas las posiciones que sean heterocigotas en alguna SC o alguna SP, para eso hay que sacarlas de los VCFs múltiples o bien de los VCFs individuales de cada OnlyChr SACE o SAPA.
VCF_FILE_sp="/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SAPA.g.vcf.gz"
VCF_FILE="/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SACE.g.vcf.gz"


A reference genome in FASTA format (genome.fasta).
A VCF file with variant positions (variants.vcf).

bcftools consensus -f /mnt/Timina/lmorales/Public/ymez/data/ref/SACE_S288C_v1/fasta/SACE_S288C_v1_allChr.fasta  -o alt_genome.fasta variants.vcf

# Filter for Positions with Alternative Alleles (ALT ≠ .): Use bcftools to retain only records where ALT has a valid value:
module load bcftools/1.9
bcftools view -v snps -Oz -o snps_only.vcf.gz /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SACE.g.vcf.gz
bcftools index snps_only.vcf.gz
bcftools stats snps_only.vcf.gz | less
bcftools view -v snps -Oz -o snps_only.vcf.gz /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SACE.g.vcf.gz


se me hace que la mejor forma es hacer el multivcf de los onlyChrs por separado.

# 06_genotyping HACER MULTIVCF
cd  /mnt/Timina/lmorales/Public/ymez/bin/scripts/06_genotyping
module load python37/3.7.0
python3.7 genotyping_and_filtering.py   -s /mnt/Timina/lmorales/Public/ymez/data/metadata/Sacc720.csv -r /mnt/Timina/lmorales/Public/ymez/data/metadata/ref_only_CONC.txt -m .01
cd  /mnt/Timina/lmorales/Public/ymez/sge/scripts/06_genotyping

Warning: from CONC missing 133 vcf files for SACE. A list of missing files can be found at /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/missingVcfs_SACE_from_CONC_5eb.log
Warning: from CONC missing 228 vcf files for SAPA. A list of missing files can be found at /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/missingVcfs_SAPA_from_CONC_dbd.log


bash makeSampleSheetFromMissingPaths.sh /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/missingVcfs_SACE_from_CONC_5eb.log  /mnt/Timina/lmorales/Public/ymez/data/metadata/missingSACEfromSacc720.csv
bash makeSampleSheetFromMissingPaths.sh /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/missingVcfs_SAPA_from_CONC_dbd.log  /mnt/Timina/lmorales/Public/ymez/data/metadata/missingSAPAfromSacc720.csv

bash makeSampleSheetFromMissingPaths.sh  /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/missingVcfs_SACE_from_CONC_3dc.log /mnt/Timina/lmorales/Public/ymez/data/metadata/missingOnly_SACEfromSacc720.csv


# 05_vcalling
qlogin
cd /mnt/Timina/lmorales/Public/ymez/bin/scripts/05_vcalling
module load python37/3.7.0
python3.7 vcalling_genotyping_isolates_GATK.py -r /mnt/Timina/lmorales/Public/ymez/data/metadata/ref_only_CONC.txt -s /mnt/Timina/lmorales/Public/ymez/data/metadata/missingSACEfromSacc720.csv
cd /mnt/Timina/lmorales/Public/ymez/bin/SGE/05_vcalling
mv  javelar_SH_vcalling_genotyping.sh javelar_SH_vcalling_genotyping_missingSACEfromSacc720.sh
bash javelar_SH_vcalling_genotyping_missingSACEfromSacc720.sh
#---aquí va---#
#en LM
cd /mnt/Timina/lmorales/Public/ymez/bin/scripts/05_vcalling
module load python37/3.7.0
python3.7 vcalling_genotyping_isolates_GATK.py -r /mnt/Timina/lmorales/Public/ymez/data/metadata/ref_only_CONC.txt -s /mnt/Timina/lmorales/Public/ymez/data/metadata/missingSAPAfromSacc720.csv
cd /mnt/Timina/lmorales/Public/ymez/bin/SGE/05_vcalling
mv lmorales_SH_vcalling_genotyping.sh lmorales_SH_vcalling_genotyping_missingSAPAfromSacc720.sh
bash lmorales_SH_vcalling_genotyping_missingSAPAfromSacc720.sh


python3.7 SNPs_onlyChr.py -r /mnt/Timina/lmorales/Public/ymez/data/metadata/ref_only_CONC.txt -s /mnt/Timina/lmorales/Public/ymez/data/metadata/missingOnly_SACEfromSacc720.csv --subgenome SACE
mv javelar_SH_vcfOnlychr.sh javelar_SH_vcfOnlychr_missingOnly_SACEfromSacc720.sh
bash javelar_SH_vcfOnlychr_missingOnly_SACEfromSacc720.sh




cd  /mnt/Timina/lmorales/Public/ymez/bin/SGE/06_genotyping/
mv javelar_SH_getSNPmatrix.sh javelar_SH_getSNPmatrix_SACE466.sh  
mv get_SACE_SNPmatrix_from_CONC.sge  get_SACE_SNPmatrix_from_CONC_SACE466.sge #SinTequila, sin SAM2 con MissingAlpechin
vim javelar_SH_getSNPmatrix_SACE466.sh   # cambié el nombre del sge que va a mandar correr TAMBIÉN LA CARPETA OUTPUT!
vim  get_SACE_SNPmatrix_from_CONC_SACE466.sge # cambie output de .err y .out
bash javelar_SH_getSNPmatrix_SACE466.sh # Output en: /mnt/Timina/lmorales/Public/ymez/tmp/06_genotyping/trees/SACE466

