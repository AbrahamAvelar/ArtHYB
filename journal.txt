mummer4/4.0 
nucmer --prefix=SC_SP  /mnt/Timina/lmorales/Public/ymez/data/ref/SACE_S288C_v1/fasta/SACE_S288C_v1_allChr.fasta   /mnt/Timina/lmorales/Public/ymez/data/ref/SAPA_YPS138_v1/fasta/SAPA_YPS138_v1_allChr.fasta 
delta-filter -r -q SC_SP.delta > filtered_SCSP.delta
show-coords -rcl filtered_SCSP.delta > alignments.coords

nucmer --prefix=sac_par_synteny -c 40 -l 15 -b 500 S_cerevisiae.fasta S_paradoxus.fasta # esta no la corrí
# -c cluster length (default 65) # -l match length (default 20)   # -b break length to allow size of the gaps (default 200)

delta-filter -i 70 -l 500 filtered_SCSP.delta > filtered_SCSP_2.delta # i minimum identity. -l minimum length of alignments
show-coords -rcl filtered_SCSP_2.delta > sac_par_synteny.coords

/mnt/Timina/lmorales/Public/ymez/data/ref/Mummer_SCSP/

cp /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/*.tbi   x|
 sed 's/ /,/g' sac_par_synteny.coords| sed 's/|//g' |sed 's/,,,,/,/g'|sed 's/,,,/,/g'|sed 's/,,/,/g'|sed 's/\t/,/g' | head > sc_sp_coords.txt


bash coords2chain.sh sac_par_synteny.coords output.chain  

module load liftover/liftover
cp /mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/YMX004655_CONC.SNP_onlychr_SAPA.g.vcf
/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/YMX004655_CONC.SNP_onlychr_SACE.g.vcf

tabix -p vcf S_paradoxus.vcf.gz


###################

cd /mnt/Timina/lmorales/Public/ymez/data/ref/Mummer_SCSP
module load samtools/1.9
bash extractCoverFromBed.sh YMX004655_CONC.rmdup.addgp.bam  sp_cords.tsv output__sp.depth
bash extractCoverFromBed.sh YMX004655_CONC.rmdup.addgp.bam  sc_cords.tsv output__sc.depth

module load samtools/1.9
bash run_extract_samples.sh /mnt/Timina/lmorales/Public/ymez/data/metadata/hybrids79.csv

module load samtools/1.9 #241128
bash run_extract_samples.sh /mnt/Timina/lmorales/Public/ymez/data/metadata/HybParents.csv #241128


/mnt/Timina/lmorales/Public/ymez/data/ref/Mummer_SCSP/sp_cords.tsv
ls -alth /mnt/Timina/lmorales/Public/ymez/data/bam/ | head 




############# Heterocigosidad en las mismas ventanas


#!/bin/bash

module load bcftools/1.9

REGIONS_FILE_sp="/mnt/Timina/lmorales/Public/ymez/data/bam/XA191c2_output_sp_500ntWindow.depth"
VCF_FILE_sp="/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SAPA.g.vcf.gz"
OUTPUT_FILE_sp="XA191c2_heterozygosity_per_region.txt"

REGIONS_FILE="/mnt/Timina/lmorales/Public/ymez/data/bam/XA191c2_output_sc_500ntWindow.depth"
VCF_FILE="/mnt/Timina/lmorales/Public/ymez/tmp/05_vcalling/XA191c2_CONC.SNP_onlychr_SACE.g.vcf.gz"
OUTPUT_FILE="XA191c2_heterozygosity_per_region_SACE.txt"

last_chrom=""  # Variable para almacenar el último cromosoma procesado
echo -e "Region\tChromosome\tStart\tEnd\tTotal_Sites\tHeterozygous_Sites\tHeterozygosity" > "$OUTPUT_FILE" #Crear output con columnas

cut -f1 "$REGIONS_FILE" | while IFS= read -r region; do
    # Extraer el cromosoma y las coordenadas
    chrom=$(echo "$region" | cut -d':' -f1)
    start=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f1)
    end=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f2)


    if [[ "$chrom" != "$last_chrom" ]]; then
        echo "Processing chromosome: $chrom"
        last_chrom="$chrom"
    fi



    # Extraer variantes dentro de la región
    bcftools view -r "$chrom:$start-$end" "$VCF_FILE" -Ou | \
    bcftools query -f '[%CHROM\t%POS\t%GT\n]' > genotypes.tmp

    # Contar genotipos heterocigotos (0/1 o 1/0) y total de variantes
    total_sites=$(wc -l < genotypes.tmp)
    het_sites=$(awk '$3 == "0/1" || $3 == "1/0" {count++} END {print count}' genotypes.tmp)

    if [[ -z "$het_sites" ]]; then
       het_sites=0
       #continue
    fi

    # Calcular heterocigosidad (het_sites / total_sites)
    if [ "$total_sites" -gt 0 ]; then
        heterozygosity=$(awk "BEGIN {print $het_sites / $total_sites}")
    else
        #heterozygosity=0
        continue
    fi

    # Guardar los resultados
    echo -e "$region\t$chrom\t$start\t$end\t$total_sites\t$het_sites\t$heterozygosity" >> "$OUTPUT_FILE"

    # Limpiar archivo temporal
    rm genotypes.tmp

done


echo "Cálculo completado. Resultados guardados en $OUTPUT_FILE."

echo -e "Region\tChromosome\tStart\tEnd\tTotal_Sites\tHeterozygous_Sites\tHeterozygosity" > "$OUTPUT_FILE_sp"
cut -f1 "$REGIONS_FILE_sp" | while IFS= read -r region; do
    # Extraer el cromosoma y las coordenadas
    chrom=$(echo "$region" | cut -d':' -f1)
    start=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f1)
    end=$(echo "$region" | cut -d':' -f2 | cut -d'-' -f2)
    # Extraer variantes dentro de la región
    bcftools view -r "$chrom:$start-$end" "$VCF_FILE_sp" -Ou | \
    bcftools query -f '[%CHROM\t%POS\t%GT\n]' > genotypes.tmp
    # Contar genotipos heterocigotos (0/1 o 1/0) y total de variantes
    total_sites=$(wc -l < genotypes.tmp)
    het_sites=$(awk '$3 == "0/1" || $3 == "1/0" {count++} END {print count}' genotypes.tmp)
    # Calcular heterocigosidad (het_sites / total_sites)
    if [ "$total_sites" -gt 0 ]; then
        heterozygosity=$(awk "BEGIN {print $het_sites / $total_sites}")
    else
        heterozygosity=0
    fi
    # Guardar los resultados
    echo -e "$region\t$chrom\t$start\t$end\t$total_sites\t$het_sites\t$heterozygosity" >> "$OUTPUT_FILE_sp"
    # Limpiar archivo temporal
    rm genotypes.tmp
done

echo "Cálculo completado. Resultados guardados en $OUTPUT_FILE_sp."



bash windowed_heterozygosity.sh
run_windowed_het.sh /mnt/Timina/lmorales/Public/ymez/data/metadata/HybParents.csv


